[{"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\index.js":"1","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\App.js":"2","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\Home.jsx":"3","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\NotFound.jsx":"4","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\components\\Navbar.jsx":"5","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\EditStudent.jsx":"6","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\Student.jsx":"7","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\AddStudent.jsx":"8"},{"size":336,"mtime":1686504320626,"results":"9","hashOfConfig":"10"},{"size":783,"mtime":1686573638442,"results":"11","hashOfConfig":"10"},{"size":323,"mtime":1686576559156,"results":"12","hashOfConfig":"10"},{"size":335,"mtime":1686576877414,"results":"13","hashOfConfig":"10"},{"size":864,"mtime":1686582668819,"results":"14","hashOfConfig":"10"},{"size":8541,"mtime":1686582893757,"results":"15","hashOfConfig":"10"},{"size":4673,"mtime":1686575527101,"results":"16","hashOfConfig":"10"},{"size":4678,"mtime":1686572787017,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"docrdb",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\index.js",[],[],[],"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\App.js",["45","46"],[],"import React from \"react\";\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport Home from \"./Routes/Home\";\nimport Student from \"./Routes/Student\";\nimport AddStudent from \"./Routes/AddStudent\";\nimport EditStudent from \"./Routes/EditStudent\";\nimport NotFound from \"./Routes/NotFound\";\nimport Navbar from \"./components/Navbar\";\n\nconst App = () => {\n    return (\n        <>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/student\" element={<Student />} />\n                <Route path=\"/add\" element={<AddStudent />} />\n                <Route path=\"/student/:id\" element={<EditStudent />} />\n                <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        </>\n    );\n};\n\nexport default App;","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\Home.jsx",[],[],"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\NotFound.jsx",[],[],"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\EditStudent.jsx",["47"],[],"C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\Student.jsx",["48","49","50","51"],[],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from \"../components/Navbar\";\n\nconst Student = () => {\n    const [students, setStudents] = useState([]);\n    const [filteredStudents, setFilteredStudents] = useState([]);\n    const [facultyFilter, setFacultyFilter] = useState('All');\n    const [loading, setLoading] = useState(true);\n    const [filter, setFilter] = useState('All')\n\n    useEffect(() => {\n        fetchStudents();\n    }, []);\n\n    const fetchStudents = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/student');\n            const data = await response.json();\n            setStudents(data);\n            setFilteredStudents(data);\n        } catch (error) {\n            console.log('Error fetching students:', error);\n        }\n    };\n\n    const handleFilterChange = (event) => {\n        const selectedFilter = event.target.value;\n        setFilter(selectedFilter);\n\n        if (selectedFilter === 'All') {\n            setFilteredStudents(students);\n        } else {\n            const filtered = students.filter((student) => student.faculty === selectedFilter);\n            setFilteredStudents(filtered);\n        }\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            await fetch(`http://localhost:3001/student/${id}`, { method: 'DELETE' });\n            const updatedStudents = students.filter((student) => student.id !== id);\n            setStudents(updatedStudents);\n            setFilteredStudents(updatedStudents);\n        } catch (error) {\n            console.log('Error deleting student:', error);\n        }\n    };\n\n\n    return (\n        <>\n            <Navbar />\n            <div>\n                <h1>All Students</h1>\n                {students.length === 0 ? (\n                    <p>Loading ...</p>\n                ) : (\n                    <div>\n                        <label htmlFor=\"faculty-filter\">Filter by Faculty:</label>\n                        <select\n                            id=\"faculty-filter\"\n                            value={facultyFilter}\n                            onChange={handleFilterChange}\n                            data-testid=\"filter\"\n                        >\n                            <option value=\"All\">All</option>\n                            <option value=\"Fakultas Ekonomi\">Fakultas Ekonomi</option>\n                            <option value=\"Fakultas Ilmu Sosial dan Politik\">\n                                Fakultas Ilmu Sosial dan Politik\n                            </option>\n                            <option value=\"Fakultas Teknik\">Fakultas Teknik</option>\n                            <option value=\"Fakultas Teknologi Informasi dan Sains\">\n                                Fakultas Teknologi Informasi dan Sains\n                            </option>\n                        </select>\n                        <table id=\"table-student\">\n                            <thead>\n                                <tr>\n                                    <th>No</th>\n                                    <th>Full Name</th>\n                                    <th>Faculty</th>\n                                    <th>Program Study</th>\n                                    <th>Option</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {filteredStudents.map((student, index) => (\n                                    <tr key={student.id} className=\"student-data-row\">\n                                        <td>{index + 1}</td>\n                                        <td>\n                                            <Link to={`/student/${student.id}`}>{student.fullname}</Link>\n                                        </td>\n                                        <td>{student.faculty}</td>\n                                        <td>{student.programStudy}</td>\n                                        <td>\n                                            <button\n                                                data-testid={`delete-${student.id}`}\n                                                onClick={() => handleDelete(student.id)}\n                                            >\n                                                Delete\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                )}\n\n            </div>\n        </>\n    );\n};\n\nexport default Student;","C:\\Users\\rastr\\grader\\Frontend Web Development with React\\Final_Project\\react-dasar-final-poject-student-portal-v1\\src\\Routes\\AddStudent.jsx",[],[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":25,"nodeType":"54","messageId":"55","endLine":2,"endColumn":36},{"ruleId":"52","severity":1,"message":"56","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":16,"column":12,"nodeType":"54","messageId":"55","endLine":16,"endColumn":19},{"ruleId":"52","severity":1,"message":"58","line":8,"column":27,"nodeType":"54","messageId":"55","endLine":8,"endColumn":43},{"ruleId":"52","severity":1,"message":"57","line":9,"column":12,"nodeType":"54","messageId":"55","endLine":9,"endColumn":19},{"ruleId":"52","severity":1,"message":"59","line":9,"column":21,"nodeType":"54","messageId":"55","endLine":9,"endColumn":31},{"ruleId":"52","severity":1,"message":"60","line":10,"column":12,"nodeType":"54","messageId":"55","endLine":10,"endColumn":18},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'loading' is assigned a value but never used.","'setFacultyFilter' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'filter' is assigned a value but never used."]